# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: nn_msg.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='nn_msg.proto',
  package='node',
  syntax='proto2',
  serialized_pb=_b('\n\x0cnn_msg.proto\x12\x04node\"?\n\x0bN2N_Request\x12\x30\n\x0enodeConnectReq\x18\x01 \x01(\x0b\x32\x18.node.N2N_NodeConnectReq\"b\n\x0cN2N_Response\x12\x0e\n\x06result\x18\x01 \x01(\x08\x12\x10\n\x08\x65rrorStr\x18\x02 \x01(\t\x12\x30\n\x0enodeConnectRes\x18\x03 \x01(\x0b\x32\x18.node.N2N_NodeConnectRes\"@\n\x12N2N_NodeConnectReq\x12\x0e\n\x06nodeId\x18\x01 \x01(\x05\x12\x0c\n\x04host\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\"\x14\n\x12N2N_NodeConnectRes*@\n\x06NN_Msg\x12\x1a\n\x14N2N_Node_Connect_Req\x10\x81\x80\x08\x12\x1a\n\x14N2N_Node_Connect_Res\x10\x82\x80\x08\x42\x1a\n\x18\x63om.kongyt.node.messages')
)

_NN_MSG = _descriptor.EnumDescriptor(
  name='NN_Msg',
  full_name='node.NN_Msg',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='N2N_Node_Connect_Req', index=0, number=131073,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='N2N_Node_Connect_Res', index=1, number=131074,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=275,
  serialized_end=339,
)
_sym_db.RegisterEnumDescriptor(_NN_MSG)

NN_Msg = enum_type_wrapper.EnumTypeWrapper(_NN_MSG)
N2N_Node_Connect_Req = 131073
N2N_Node_Connect_Res = 131074



_N2N_REQUEST = _descriptor.Descriptor(
  name='N2N_Request',
  full_name='node.N2N_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodeConnectReq', full_name='node.N2N_Request.nodeConnectReq', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=85,
)


_N2N_RESPONSE = _descriptor.Descriptor(
  name='N2N_Response',
  full_name='node.N2N_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='node.N2N_Response.result', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errorStr', full_name='node.N2N_Response.errorStr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='nodeConnectRes', full_name='node.N2N_Response.nodeConnectRes', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=185,
)


_N2N_NODECONNECTREQ = _descriptor.Descriptor(
  name='N2N_NodeConnectReq',
  full_name='node.N2N_NodeConnectReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodeId', full_name='node.N2N_NodeConnectReq.nodeId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='host', full_name='node.N2N_NodeConnectReq.host', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='node.N2N_NodeConnectReq.port', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=187,
  serialized_end=251,
)


_N2N_NODECONNECTRES = _descriptor.Descriptor(
  name='N2N_NodeConnectRes',
  full_name='node.N2N_NodeConnectRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=253,
  serialized_end=273,
)

_N2N_REQUEST.fields_by_name['nodeConnectReq'].message_type = _N2N_NODECONNECTREQ
_N2N_RESPONSE.fields_by_name['nodeConnectRes'].message_type = _N2N_NODECONNECTRES
DESCRIPTOR.message_types_by_name['N2N_Request'] = _N2N_REQUEST
DESCRIPTOR.message_types_by_name['N2N_Response'] = _N2N_RESPONSE
DESCRIPTOR.message_types_by_name['N2N_NodeConnectReq'] = _N2N_NODECONNECTREQ
DESCRIPTOR.message_types_by_name['N2N_NodeConnectRes'] = _N2N_NODECONNECTRES
DESCRIPTOR.enum_types_by_name['NN_Msg'] = _NN_MSG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

N2N_Request = _reflection.GeneratedProtocolMessageType('N2N_Request', (_message.Message,), dict(
  DESCRIPTOR = _N2N_REQUEST,
  __module__ = 'nn_msg_pb2'
  # @@protoc_insertion_point(class_scope:node.N2N_Request)
  ))
_sym_db.RegisterMessage(N2N_Request)

N2N_Response = _reflection.GeneratedProtocolMessageType('N2N_Response', (_message.Message,), dict(
  DESCRIPTOR = _N2N_RESPONSE,
  __module__ = 'nn_msg_pb2'
  # @@protoc_insertion_point(class_scope:node.N2N_Response)
  ))
_sym_db.RegisterMessage(N2N_Response)

N2N_NodeConnectReq = _reflection.GeneratedProtocolMessageType('N2N_NodeConnectReq', (_message.Message,), dict(
  DESCRIPTOR = _N2N_NODECONNECTREQ,
  __module__ = 'nn_msg_pb2'
  # @@protoc_insertion_point(class_scope:node.N2N_NodeConnectReq)
  ))
_sym_db.RegisterMessage(N2N_NodeConnectReq)

N2N_NodeConnectRes = _reflection.GeneratedProtocolMessageType('N2N_NodeConnectRes', (_message.Message,), dict(
  DESCRIPTOR = _N2N_NODECONNECTRES,
  __module__ = 'nn_msg_pb2'
  # @@protoc_insertion_point(class_scope:node.N2N_NodeConnectRes)
  ))
_sym_db.RegisterMessage(N2N_NodeConnectRes)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\030com.kongyt.node.messages'))
# @@protoc_insertion_point(module_scope)
